{"version":3,"file":"angular-fire-auth-guard.js","sources":["../../../src/auth-guard/auth-guard.ts","../../../src/auth-guard/auth-guard.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAUsC,IAAI,IAAI,CAAC,CAAC,IAAI;AAAE;AAGrD,MAHY,QAAQ,GAAa,GAAG;AAAQ,MAKhC,oBAAoB;AAAG;AAAQ;AAEnC;AAAuB;AAAQ,IAAtC,YAAoB,MAAc,EAAU,IAAqB;AAAI,QAAjD,WAAM,GAAN,MAAM,CAAQ;AAAC,QAAS,SAAI,GAAJ,IAAI,CAAiB;AAAC,QAElE,gBAAW;AAAQ;AAA2B;AAA4B;AACzD;AAAY,QADf,CAAC,IAA4B,EAAE,KAA0B;AACzE;AAA6B,kBAAnB,eAAe,GAAG,mBAAA,IAAI,CAAC,IAAI,CAAC,aAAa;AAAY;AAA2B;AAC9E,YADiE,MAAM,QAAQ,EAAC;AAC5F,YAAI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACxB,IAAI,CAAC,CAAC,CAAC,EACP,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,EAC5B,GAAG;AAAM;AACW;AACb;AACN,YAHG,GAAG;AACb,gBAAQ,IAAI,OAAO,GAAG,KAAK,SAAS,EAAE;AACtC,oBAAU,OAAO,GAAG,CAAC;AACrB,iBAAS;AAAC,qBAAK,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACvC,oBAAU,OAAO,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAChD,iBAAS;AAAC,qBAAK;AACf;AACU,oBAAA,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC3C,iBAAS;AACT,aAAO,EAAC,CACH,CAAC;AACN,SAAG,EAAA;AACH,KAnBuE;AACvE;gDANC,UAAU,SAAC,kBACV,UAAU,EAAE,KAAK,cAClB,sEACI;AAAC;AAAmB;AAEd,YAhBmC,MAAM;AAAI,YAI/C,eAAe;AAAG;AAAG;;;;;;yGAKb;AAAC;AAAa;AAAqB,IASlD,2CAgBC;AACH;AAGI;AAAiB;AAAgB;AAAQ,IAtB/B,sCAAsB;AAAC;AAAQ;AAAiB;AAEzD;AAAQ,IAFyB,oCAA6B;AAAC;AAAE;AAExD,MAoBD,WAAW;AAAQ;AAAmB;AAC5C;AADoB,CAAC,IAAuB,MAAM;AACzD,IAAE,WAAW,EAAE,CAAE,oBAAoB,CAAE,EAAE,IAAI,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE;AACtE,CAAC,CAAC;AAEF;AACc;AAAmB;AAAe;AAAJ,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;AAAE;AACjE,MADH,cAAc,GAAa,GAAG;AAAQ;AAAe;AAC/D;AAAe;AAAqB,CAAC,IAAwB,KAAK,IAAI,GAAG,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;AAAE;AAChG,MADH,aAAa,GAAG,SAAS;AAAQ;AAAe;AAAmB;AAAe;AACpD,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa;AAAE;AACjE,MADH,aAAa,GAAa,GAAG;AAAQ;AAAe;AACtD;AAAe;AAA0B,aAAa,IAAI,aAAa,GAAG,aAAa,CAAC,MAAM,GAAG,EAAE;AAAE;AACjG,MADF,YAAY,GAAG,IAAI,CAAC,aAAa,EAAE,GAAG,MAA4D;AAC/G;AAAiB,MAAJ,cAAc;AAAQ;AAAoB;AAC5C;AAAT,CAAC,KAAK,KAAK,IAAI,CAAC,YAAY,EAAE,GAAG;AAAM;AAAqB;AAAe;AAAzC,MAAM,IAAK,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAC,CAAC;AAC5E;AAAiB,MAAL,sBAAsB;AAAQ;AAAuB;AAC7D;AAAH,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG;AAAM;AAAuB;AACxD;AAD4B,QAAQ,IAAI,QAAQ,IAAI,QAAQ,EAAC,CAAC;AACpE;AAAiB,MAAL,kBAAkB;AAAQ;AAAuB;AACzD;AAAH,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,EAAE,GAAG;AAAM;AAAuB;AAAe;AAA3C,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,IAAI,EAAC,CAAC;AAC5E;AAAC;AAAI;AAAkC;AAAwC;AAAqJ;AAAI,MChD5N,0BAA0B;AAAG;sDAHzC,QAAQ,SAAC,kBACR,SAAS,EAAE,CAAE,oBAAoB,CAAE;EACpC;;;;;;;0BACI;AAAC;AAAC;AAAI;AACV;AAAiC;AAAqJ;AAAI;AAAC;AAAI;AAAkC;AAA8C;AAAqJ;AAAI;AAAC;AAA4M","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of, pipe, UnaryFunction } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport firebase from 'firebase/app';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\nexport type AuthPipeGenerator = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => AuthPipe;\nexport type AuthPipe = UnaryFunction<Observable<firebase.User|null>, Observable<boolean|string|any[]>>;\n\nexport const loggedIn: AuthPipe = map(user => !!user);\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireAuthGuard implements CanActivate {\n\n  constructor(private router: Router, private auth: AngularFireAuth) {}\n\n  canActivate = (next: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\n    const authPipeFactory = next.data.authGuardPipe as AuthPipeGenerator || (() => loggedIn);\n    return this.auth.user.pipe(\n      take(1),\n      authPipeFactory(next, state),\n      map(can => {\n        if (typeof can === 'boolean') {\n          return can;\n        } else if (Array.isArray(can)) {\n          return this.router.createUrlTree(can);\n        } else {\n          // TODO(EdricChan03): Add tests\n          return this.router.parseUrl(can);\n        }\n      })\n    );\n  }\n\n}\n\nexport const canActivate = (pipe: AuthPipeGenerator) => ({\n  canActivate: [ AngularFireAuthGuard ], data: { authGuardPipe: pipe }\n});\n\n\nexport const isNotAnonymous: AuthPipe = map(user => !!user && !user.isAnonymous);\nexport const idTokenResult = switchMap((user: firebase.User|null) => user ? user.getIdTokenResult() : of(null));\nexport const emailVerified: AuthPipe = map(user => !!user && user.emailVerified);\nexport const customClaims = pipe(idTokenResult, map(idTokenResult => idTokenResult ? idTokenResult.claims : []));\nexport const hasCustomClaim: (claim: string) => AuthPipe =\n  (claim) => pipe(customClaims, map(claims =>  claims.hasOwnProperty(claim)));\nexport const redirectUnauthorizedTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn || redirect));\nexport const redirectLoggedInTo: (redirect: string|any[]) => AuthPipe =\n  (redirect) => pipe(loggedIn, map(loggedIn => loggedIn && redirect || true));\n","import { NgModule } from '@angular/core';\nimport { AngularFireAuthGuard } from './auth-guard';\n\n@NgModule({\n  providers: [ AngularFireAuthGuard ]\n})\nexport class AngularFireAuthGuardModule { }\n"]}