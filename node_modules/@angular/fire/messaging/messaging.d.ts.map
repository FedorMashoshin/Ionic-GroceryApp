{"version":3,"file":"messaging.d.ts","sources":["messaging.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { InjectionToken, NgZone } from '@angular/core';\nimport firebase from 'firebase/app';\nimport { Observable } from 'rxjs';\nimport { FirebaseAppConfig, FirebaseOptions, ɵPromiseProxy } from '@angular/fire';\nexport declare const VAPID_KEY: InjectionToken<string>;\nexport declare const SERVICE_WORKER: InjectionToken<Promise<ServiceWorkerRegistration>>;\nexport interface AngularFireMessaging extends Omit<ɵPromiseProxy<firebase.messaging.Messaging>, 'deleteToken' | 'getToken' | 'requestPermission'> {\n}\nexport declare class AngularFireMessaging {\n    readonly requestPermission: Observable<void>;\n    readonly getToken: Observable<string | null>;\n    readonly tokenChanges: Observable<string | null>;\n    readonly messages: Observable<{}>;\n    readonly requestToken: Observable<string | null>;\n    readonly deleteToken: (token: string) => Observable<boolean>;\n    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, platformId: Object, zone: NgZone, vapidKey: string | null, _serviceWorker: any);\n}\n"]}